// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MassoudBooksSr.proto

#ifndef PROTOBUF_INCLUDED_MassoudBooksSr_2eproto
#define PROTOBUF_INCLUDED_MassoudBooksSr_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_MassoudBooksSr_2eproto 

namespace protobuf_MassoudBooksSr_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_MassoudBooksSr_2eproto
namespace MassoudBookSerialization {
class Book;
class BookDefaultTypeInternal;
extern BookDefaultTypeInternal _Book_default_instance_;
class ToSerialize;
class ToSerializeDefaultTypeInternal;
extern ToSerializeDefaultTypeInternal _ToSerialize_default_instance_;
}  // namespace MassoudBookSerialization
namespace google {
namespace protobuf {
template<> ::MassoudBookSerialization::Book* Arena::CreateMaybeMessage<::MassoudBookSerialization::Book>(Arena*);
template<> ::MassoudBookSerialization::ToSerialize* Arena::CreateMaybeMessage<::MassoudBookSerialization::ToSerialize>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace MassoudBookSerialization {

enum Book_Catagories {
  Book_Catagories_AnyCatagory = 0,
  Book_Catagories_Math = 1,
  Book_Catagories_GameDev = 2,
  Book_Catagories_CSharp = 3,
  Book_Catagories_Java = 4,
  Book_Catagories_Cs = 5,
  Book_Catagories_Cpp = 6,
  Book_Catagories_Emmbedded = 7,
  Book_Catagories_PyAndMl = 8,
  Book_Catagories_Art = 9,
  Book_Catagories_Android = 10,
  Book_Catagories_Book_Catagories_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Book_Catagories_Book_Catagories_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Book_Catagories_IsValid(int value);
const Book_Catagories Book_Catagories_Catagories_MIN = Book_Catagories_AnyCatagory;
const Book_Catagories Book_Catagories_Catagories_MAX = Book_Catagories_Android;
const int Book_Catagories_Catagories_ARRAYSIZE = Book_Catagories_Catagories_MAX + 1;

const ::google::protobuf::EnumDescriptor* Book_Catagories_descriptor();
inline const ::std::string& Book_Catagories_Name(Book_Catagories value) {
  return ::google::protobuf::internal::NameOfEnum(
    Book_Catagories_descriptor(), value);
}
inline bool Book_Catagories_Parse(
    const ::std::string& name, Book_Catagories* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Book_Catagories>(
    Book_Catagories_descriptor(), name, value);
}
enum Book_ReadingStatus {
  Book_ReadingStatus_AnyReadingStatus = 0,
  Book_ReadingStatus_Reading = 1,
  Book_ReadingStatus_WannaRead = 2,
  Book_ReadingStatus_WannaRead2 = 3,
  Book_ReadingStatus_YetToWannaRead = 5,
  Book_ReadingStatus_DelayedReading = 6,
  Book_ReadingStatus_Finished = 7,
  Book_ReadingStatus_Dropped = 8,
  Book_ReadingStatus_Book_ReadingStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Book_ReadingStatus_Book_ReadingStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Book_ReadingStatus_IsValid(int value);
const Book_ReadingStatus Book_ReadingStatus_ReadingStatus_MIN = Book_ReadingStatus_AnyReadingStatus;
const Book_ReadingStatus Book_ReadingStatus_ReadingStatus_MAX = Book_ReadingStatus_Dropped;
const int Book_ReadingStatus_ReadingStatus_ARRAYSIZE = Book_ReadingStatus_ReadingStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* Book_ReadingStatus_descriptor();
inline const ::std::string& Book_ReadingStatus_Name(Book_ReadingStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    Book_ReadingStatus_descriptor(), value);
}
inline bool Book_ReadingStatus_Parse(
    const ::std::string& name, Book_ReadingStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Book_ReadingStatus>(
    Book_ReadingStatus_descriptor(), name, value);
}
// ===================================================================

class Book : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MassoudBookSerialization.Book) */ {
 public:
  Book();
  virtual ~Book();

  Book(const Book& from);

  inline Book& operator=(const Book& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Book(Book&& from) noexcept
    : Book() {
    *this = ::std::move(from);
  }

  inline Book& operator=(Book&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Book& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Book* internal_default_instance() {
    return reinterpret_cast<const Book*>(
               &_Book_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Book* other);
  friend void swap(Book& a, Book& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Book* New() const final {
    return CreateMaybeMessage<Book>(NULL);
  }

  Book* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Book>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Book& from);
  void MergeFrom(const Book& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Book* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Book_Catagories Catagories;
  static const Catagories AnyCatagory =
    Book_Catagories_AnyCatagory;
  static const Catagories Math =
    Book_Catagories_Math;
  static const Catagories GameDev =
    Book_Catagories_GameDev;
  static const Catagories CSharp =
    Book_Catagories_CSharp;
  static const Catagories Java =
    Book_Catagories_Java;
  static const Catagories Cs =
    Book_Catagories_Cs;
  static const Catagories Cpp =
    Book_Catagories_Cpp;
  static const Catagories Emmbedded =
    Book_Catagories_Emmbedded;
  static const Catagories PyAndMl =
    Book_Catagories_PyAndMl;
  static const Catagories Art =
    Book_Catagories_Art;
  static const Catagories Android =
    Book_Catagories_Android;
  static inline bool Catagories_IsValid(int value) {
    return Book_Catagories_IsValid(value);
  }
  static const Catagories Catagories_MIN =
    Book_Catagories_Catagories_MIN;
  static const Catagories Catagories_MAX =
    Book_Catagories_Catagories_MAX;
  static const int Catagories_ARRAYSIZE =
    Book_Catagories_Catagories_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Catagories_descriptor() {
    return Book_Catagories_descriptor();
  }
  static inline const ::std::string& Catagories_Name(Catagories value) {
    return Book_Catagories_Name(value);
  }
  static inline bool Catagories_Parse(const ::std::string& name,
      Catagories* value) {
    return Book_Catagories_Parse(name, value);
  }

  typedef Book_ReadingStatus ReadingStatus;
  static const ReadingStatus AnyReadingStatus =
    Book_ReadingStatus_AnyReadingStatus;
  static const ReadingStatus Reading =
    Book_ReadingStatus_Reading;
  static const ReadingStatus WannaRead =
    Book_ReadingStatus_WannaRead;
  static const ReadingStatus WannaRead2 =
    Book_ReadingStatus_WannaRead2;
  static const ReadingStatus YetToWannaRead =
    Book_ReadingStatus_YetToWannaRead;
  static const ReadingStatus DelayedReading =
    Book_ReadingStatus_DelayedReading;
  static const ReadingStatus Finished =
    Book_ReadingStatus_Finished;
  static const ReadingStatus Dropped =
    Book_ReadingStatus_Dropped;
  static inline bool ReadingStatus_IsValid(int value) {
    return Book_ReadingStatus_IsValid(value);
  }
  static const ReadingStatus ReadingStatus_MIN =
    Book_ReadingStatus_ReadingStatus_MIN;
  static const ReadingStatus ReadingStatus_MAX =
    Book_ReadingStatus_ReadingStatus_MAX;
  static const int ReadingStatus_ARRAYSIZE =
    Book_ReadingStatus_ReadingStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReadingStatus_descriptor() {
    return Book_ReadingStatus_descriptor();
  }
  static inline const ::std::string& ReadingStatus_Name(ReadingStatus value) {
    return Book_ReadingStatus_Name(value);
  }
  static inline bool ReadingStatus_Parse(const ::std::string& name,
      ReadingStatus* value) {
    return Book_ReadingStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string tag = 4;
  int tag_size() const;
  void clear_tag();
  static const int kTagFieldNumber = 4;
  const ::std::string& tag(int index) const;
  ::std::string* mutable_tag(int index);
  void set_tag(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tag(int index, ::std::string&& value);
  #endif
  void set_tag(int index, const char* value);
  void set_tag(int index, const char* value, size_t size);
  ::std::string* add_tag();
  void add_tag(const ::std::string& value);
  #if LANG_CXX11
  void add_tag(::std::string&& value);
  #endif
  void add_tag(const char* value);
  void add_tag(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& tag() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tag();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .MassoudBookSerialization.Book.Catagories catagory = 2;
  void clear_catagory();
  static const int kCatagoryFieldNumber = 2;
  ::MassoudBookSerialization::Book_Catagories catagory() const;
  void set_catagory(::MassoudBookSerialization::Book_Catagories value);

  // .MassoudBookSerialization.Book.ReadingStatus readingStatus = 3;
  void clear_readingstatus();
  static const int kReadingStatusFieldNumber = 3;
  ::MassoudBookSerialization::Book_ReadingStatus readingstatus() const;
  void set_readingstatus(::MassoudBookSerialization::Book_ReadingStatus value);

  // int32 pages = 5;
  void clear_pages();
  static const int kPagesFieldNumber = 5;
  ::google::protobuf::int32 pages() const;
  void set_pages(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MassoudBookSerialization.Book)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tag_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int catagory_;
  int readingstatus_;
  ::google::protobuf::int32 pages_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_MassoudBooksSr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToSerialize : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MassoudBookSerialization.ToSerialize) */ {
 public:
  ToSerialize();
  virtual ~ToSerialize();

  ToSerialize(const ToSerialize& from);

  inline ToSerialize& operator=(const ToSerialize& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToSerialize(ToSerialize&& from) noexcept
    : ToSerialize() {
    *this = ::std::move(from);
  }

  inline ToSerialize& operator=(ToSerialize&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToSerialize& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToSerialize* internal_default_instance() {
    return reinterpret_cast<const ToSerialize*>(
               &_ToSerialize_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ToSerialize* other);
  friend void swap(ToSerialize& a, ToSerialize& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToSerialize* New() const final {
    return CreateMaybeMessage<ToSerialize>(NULL);
  }

  ToSerialize* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToSerialize>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToSerialize& from);
  void MergeFrom(const ToSerialize& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToSerialize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MassoudBookSerialization.Book AllBooks = 1;
  int allbooks_size() const;
  void clear_allbooks();
  static const int kAllBooksFieldNumber = 1;
  ::MassoudBookSerialization::Book* mutable_allbooks(int index);
  ::google::protobuf::RepeatedPtrField< ::MassoudBookSerialization::Book >*
      mutable_allbooks();
  const ::MassoudBookSerialization::Book& allbooks(int index) const;
  ::MassoudBookSerialization::Book* add_allbooks();
  const ::google::protobuf::RepeatedPtrField< ::MassoudBookSerialization::Book >&
      allbooks() const;

  // repeated string Tags = 2;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 2;
  const ::std::string& tags(int index) const;
  ::std::string* mutable_tags(int index);
  void set_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tags(int index, ::std::string&& value);
  #endif
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  ::std::string* add_tags();
  void add_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_tags(::std::string&& value);
  #endif
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tags();

  // @@protoc_insertion_point(class_scope:MassoudBookSerialization.ToSerialize)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MassoudBookSerialization::Book > allbooks_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tags_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_MassoudBooksSr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Book

// string name = 1;
inline void Book::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Book::name() const {
  // @@protoc_insertion_point(field_get:MassoudBookSerialization.Book.name)
  return name_.GetNoArena();
}
inline void Book::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MassoudBookSerialization.Book.name)
}
#if LANG_CXX11
inline void Book::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MassoudBookSerialization.Book.name)
}
#endif
inline void Book::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MassoudBookSerialization.Book.name)
}
inline void Book::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MassoudBookSerialization.Book.name)
}
inline ::std::string* Book::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MassoudBookSerialization.Book.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Book::release_name() {
  // @@protoc_insertion_point(field_release:MassoudBookSerialization.Book.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Book::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MassoudBookSerialization.Book.name)
}

// .MassoudBookSerialization.Book.Catagories catagory = 2;
inline void Book::clear_catagory() {
  catagory_ = 0;
}
inline ::MassoudBookSerialization::Book_Catagories Book::catagory() const {
  // @@protoc_insertion_point(field_get:MassoudBookSerialization.Book.catagory)
  return static_cast< ::MassoudBookSerialization::Book_Catagories >(catagory_);
}
inline void Book::set_catagory(::MassoudBookSerialization::Book_Catagories value) {
  
  catagory_ = value;
  // @@protoc_insertion_point(field_set:MassoudBookSerialization.Book.catagory)
}

// .MassoudBookSerialization.Book.ReadingStatus readingStatus = 3;
inline void Book::clear_readingstatus() {
  readingstatus_ = 0;
}
inline ::MassoudBookSerialization::Book_ReadingStatus Book::readingstatus() const {
  // @@protoc_insertion_point(field_get:MassoudBookSerialization.Book.readingStatus)
  return static_cast< ::MassoudBookSerialization::Book_ReadingStatus >(readingstatus_);
}
inline void Book::set_readingstatus(::MassoudBookSerialization::Book_ReadingStatus value) {
  
  readingstatus_ = value;
  // @@protoc_insertion_point(field_set:MassoudBookSerialization.Book.readingStatus)
}

// repeated string tag = 4;
inline int Book::tag_size() const {
  return tag_.size();
}
inline void Book::clear_tag() {
  tag_.Clear();
}
inline const ::std::string& Book::tag(int index) const {
  // @@protoc_insertion_point(field_get:MassoudBookSerialization.Book.tag)
  return tag_.Get(index);
}
inline ::std::string* Book::mutable_tag(int index) {
  // @@protoc_insertion_point(field_mutable:MassoudBookSerialization.Book.tag)
  return tag_.Mutable(index);
}
inline void Book::set_tag(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MassoudBookSerialization.Book.tag)
  tag_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Book::set_tag(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:MassoudBookSerialization.Book.tag)
  tag_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Book::set_tag(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MassoudBookSerialization.Book.tag)
}
inline void Book::set_tag(int index, const char* value, size_t size) {
  tag_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MassoudBookSerialization.Book.tag)
}
inline ::std::string* Book::add_tag() {
  // @@protoc_insertion_point(field_add_mutable:MassoudBookSerialization.Book.tag)
  return tag_.Add();
}
inline void Book::add_tag(const ::std::string& value) {
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MassoudBookSerialization.Book.tag)
}
#if LANG_CXX11
inline void Book::add_tag(::std::string&& value) {
  tag_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:MassoudBookSerialization.Book.tag)
}
#endif
inline void Book::add_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MassoudBookSerialization.Book.tag)
}
inline void Book::add_tag(const char* value, size_t size) {
  tag_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MassoudBookSerialization.Book.tag)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Book::tag() const {
  // @@protoc_insertion_point(field_list:MassoudBookSerialization.Book.tag)
  return tag_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Book::mutable_tag() {
  // @@protoc_insertion_point(field_mutable_list:MassoudBookSerialization.Book.tag)
  return &tag_;
}

// int32 pages = 5;
inline void Book::clear_pages() {
  pages_ = 0;
}
inline ::google::protobuf::int32 Book::pages() const {
  // @@protoc_insertion_point(field_get:MassoudBookSerialization.Book.pages)
  return pages_;
}
inline void Book::set_pages(::google::protobuf::int32 value) {
  
  pages_ = value;
  // @@protoc_insertion_point(field_set:MassoudBookSerialization.Book.pages)
}

// -------------------------------------------------------------------

// ToSerialize

// repeated .MassoudBookSerialization.Book AllBooks = 1;
inline int ToSerialize::allbooks_size() const {
  return allbooks_.size();
}
inline void ToSerialize::clear_allbooks() {
  allbooks_.Clear();
}
inline ::MassoudBookSerialization::Book* ToSerialize::mutable_allbooks(int index) {
  // @@protoc_insertion_point(field_mutable:MassoudBookSerialization.ToSerialize.AllBooks)
  return allbooks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::MassoudBookSerialization::Book >*
ToSerialize::mutable_allbooks() {
  // @@protoc_insertion_point(field_mutable_list:MassoudBookSerialization.ToSerialize.AllBooks)
  return &allbooks_;
}
inline const ::MassoudBookSerialization::Book& ToSerialize::allbooks(int index) const {
  // @@protoc_insertion_point(field_get:MassoudBookSerialization.ToSerialize.AllBooks)
  return allbooks_.Get(index);
}
inline ::MassoudBookSerialization::Book* ToSerialize::add_allbooks() {
  // @@protoc_insertion_point(field_add:MassoudBookSerialization.ToSerialize.AllBooks)
  return allbooks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MassoudBookSerialization::Book >&
ToSerialize::allbooks() const {
  // @@protoc_insertion_point(field_list:MassoudBookSerialization.ToSerialize.AllBooks)
  return allbooks_;
}

// repeated string Tags = 2;
inline int ToSerialize::tags_size() const {
  return tags_.size();
}
inline void ToSerialize::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& ToSerialize::tags(int index) const {
  // @@protoc_insertion_point(field_get:MassoudBookSerialization.ToSerialize.Tags)
  return tags_.Get(index);
}
inline ::std::string* ToSerialize::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:MassoudBookSerialization.ToSerialize.Tags)
  return tags_.Mutable(index);
}
inline void ToSerialize::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MassoudBookSerialization.ToSerialize.Tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ToSerialize::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:MassoudBookSerialization.ToSerialize.Tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ToSerialize::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MassoudBookSerialization.ToSerialize.Tags)
}
inline void ToSerialize::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MassoudBookSerialization.ToSerialize.Tags)
}
inline ::std::string* ToSerialize::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:MassoudBookSerialization.ToSerialize.Tags)
  return tags_.Add();
}
inline void ToSerialize::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MassoudBookSerialization.ToSerialize.Tags)
}
#if LANG_CXX11
inline void ToSerialize::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:MassoudBookSerialization.ToSerialize.Tags)
}
#endif
inline void ToSerialize::add_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MassoudBookSerialization.ToSerialize.Tags)
}
inline void ToSerialize::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MassoudBookSerialization.ToSerialize.Tags)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ToSerialize::tags() const {
  // @@protoc_insertion_point(field_list:MassoudBookSerialization.ToSerialize.Tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ToSerialize::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:MassoudBookSerialization.ToSerialize.Tags)
  return &tags_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MassoudBookSerialization

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MassoudBookSerialization::Book_Catagories> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MassoudBookSerialization::Book_Catagories>() {
  return ::MassoudBookSerialization::Book_Catagories_descriptor();
}
template <> struct is_proto_enum< ::MassoudBookSerialization::Book_ReadingStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MassoudBookSerialization::Book_ReadingStatus>() {
  return ::MassoudBookSerialization::Book_ReadingStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_MassoudBooksSr_2eproto
